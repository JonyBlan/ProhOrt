def error(code):
    print("ERROR CODE " + str(code))
    exit()

def checkearDisponibilidad(disponibilidad, numBloque, numArray, idLlamador):
    if(disponibilidad[numBloque] == 1 or disponibilidad[numBloque] == "1"):
        return True
    elif(disponibilidad[numBloque] == 0 or disponibilidad[numBloque] == "0"):
        return False
    error(6)

def forzarBloque(numBloque, idCurso, idProfesor, idAula):
    if(cursos[idCurso][numBloque] == 0 or profesores[idProfesor][numBloque] == 0 or aulas[idAula][numBloque] == 0):
        error(8)
    else:
        bloques.append([numBloque, idCurso, idProfesor, idAula])
        cursos[idCurso][numBloque] = 0
        profesores[idProfesor][numBloque] = 0
        aulas[idAula][numBloque] = 0

def llenarBloque(vuelta):
    for numBloque in range(cantBloques+1):
        idCurso = 0
        for idCurso in range(cantCursos):
            if(checkearDisponibilidad(cursos[idCurso].disponibilidad, numBloque, idCurso, 0)):
                idProfesor = 0
                for idProfesor in range(cantProfesores):
                    if(checkearDisponibilidad(profesores[idProfesor].disponibilidad, numBloque, idProfesor, 1)):
                        idAula = 0
                        for idAula in range(cantAulas):
                            if(checkearDisponibilidad(aulas[idAula].disponibilidad, numBloque, idAula, 2)):
                                cursos[idCurso][numBloque] = 0
                                profesores[idProfesor][numBloque] = 0
                                aulas[idAula][numBloque] = 0
                                bloques.append([numBloque, idCurso, idProfesor, idAula])
                                print("Bloque completo: " + str(bloques[vuelta]))
                                return 1
    error(4)

def llenarBloques():
    fillEverything()
    vueltas = 10
    for i in range(vueltas):
        llenarBloque(i)
    print("Llego al final. Continuar para borrar datos")
    # Poner un break 
    print("")

# Espacio para ejecutar funciones

llenarBloques() # Ejecuta el codigo principal